.CODE ; DEFUN/IDENT
.FALIGN ; DEFUN/IDENT
testIfs ; DEFUN/IDENT
ADD R6, R6, #-3 ; DEFUN/IDENT
STR R7, R6, #1 ; DEFUN/IDENT
STR R5, R6, #0 ; DEFUN/IDENT
ADD R5, R6, #0 ; DEFUN/IDENT
LDR R0, R6, #0 ; DUP
ADD R6, R6, #-1 ; DUP
STR R0, R6, #0 ; DUP
ADD R6 R6 #-1 ; LITERAL
CONST R0 #16 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
LDR R0, R6, #0 ; GT
LDR R1, R6, #1 ; GT
CMP R0, R1; GT
BRp TRUE_L_0 ; GT
BRnz FALSE_L_0 ; GT
TRUE_L_0 ; GT
CONST R2, #1 ; GT
BRnzp TERMINATE_L_0 ; GT
FALSE_L_0 ; GT
CONST R2, #0 ; GT
BRnzp TERMINATE_L_0 ; GT
TERMINATE_L_0 ; GT
ADD R6, R6, #1; GT
STR R2, R6, #0 ; GT
ADD R6, R6, #1 ; IF
LDR R1, R6, #0 ; IF
BRnz ELSE_BRANCH_0 ; IF
LDR R0, R6, #0 ; DUP
ADD R6, R6, #-1 ; DUP
STR R0, R6, #0 ; DUP
ADD R6 R6 #-1 ; LITERAL
CONST R0 #8 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
LDR R0, R6, #0 ; GT
LDR R1, R6, #1 ; GT
CMP R0, R1; GT
BRp TRUE_L_1 ; GT
BRnz FALSE_L_1 ; GT
TRUE_L_1 ; GT
CONST R2, #1 ; GT
BRnzp TERMINATE_L_1 ; GT
FALSE_L_1 ; GT
CONST R2, #0 ; GT
BRnzp TERMINATE_L_1 ; GT
TERMINATE_L_1 ; GT
ADD R6, R6, #1; GT
STR R2, R6, #0 ; GT
ADD R6, R6, #1 ; IF
LDR R1, R6, #0 ; IF
BRnz ELSE_BRANCH_1 ; IF
LDR R0, R6, #0 ; DUP
ADD R6, R6, #-1 ; DUP
STR R0, R6, #0 ; DUP
ADD R6 R6 #-1 ; LITERAL
CONST R0 #4 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
LDR R0, R6, #0 ; GT
LDR R1, R6, #1 ; GT
CMP R0, R1; GT
BRp TRUE_L_2 ; GT
BRnz FALSE_L_2 ; GT
TRUE_L_2 ; GT
CONST R2, #1 ; GT
BRnzp TERMINATE_L_2 ; GT
FALSE_L_2 ; GT
CONST R2, #0 ; GT
BRnzp TERMINATE_L_2 ; GT
TERMINATE_L_2 ; GT
ADD R6, R6, #1; GT
STR R2, R6, #0 ; GT
ADD R6, R6, #1 ; IF
LDR R1, R6, #0 ; IF
BRnz ELSE_BRANCH_2 ; IF
ADD R6 R6 #-1 ; LITERAL
CONST R0 #0 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
JMP ENDIF_BRANCH_2 ; ELSE
ELSE_BRANCH_2 ; ELSE
ADD R6 R6 #-1 ; LITERAL
CONST R0 #1 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
ENDIF_BRANCH_2 ; ENDIF
JMP ENDIF_BRANCH_1 ; ELSE
ELSE_BRANCH_1 ; ELSE
ADD R6 R6 #-1 ; LITERAL
CONST R0 #2 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
ENDIF_BRANCH_1 ; ENDIF
JMP ENDIF_BRANCH_0 ; ELSE
ELSE_BRANCH_0 ; ELSE
LDR R0, R6, #0 ; DUP
ADD R6, R6, #-1 ; DUP
STR R0, R6, #0 ; DUP
ADD R6 R6 #-1 ; LITERAL
CONST R0 #24 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
LDR R0, R6, #0 ; GT
LDR R1, R6, #1 ; GT
CMP R0, R1; GT
BRp TRUE_L_3 ; GT
BRnz FALSE_L_3 ; GT
TRUE_L_3 ; GT
CONST R2, #1 ; GT
BRnzp TERMINATE_L_3 ; GT
FALSE_L_3 ; GT
CONST R2, #0 ; GT
BRnzp TERMINATE_L_3 ; GT
TERMINATE_L_3 ; GT
ADD R6, R6, #1; GT
STR R2, R6, #0 ; GT
ADD R6, R6, #1 ; IF
LDR R1, R6, #0 ; IF
BRnz ELSE_BRANCH_3 ; IF
LDR R0, R6, #0 ; DUP
ADD R6, R6, #-1 ; DUP
STR R0, R6, #0 ; DUP
ADD R6 R6 #-1 ; LITERAL
CONST R0 #20 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
LDR R0, R6, #0 ; GT
LDR R1, R6, #1 ; GT
CMP R0, R1; GT
BRp TRUE_L_4 ; GT
BRnz FALSE_L_4 ; GT
TRUE_L_4 ; GT
CONST R2, #1 ; GT
BRnzp TERMINATE_L_4 ; GT
FALSE_L_4 ; GT
CONST R2, #0 ; GT
BRnzp TERMINATE_L_4 ; GT
TERMINATE_L_4 ; GT
ADD R6, R6, #1; GT
STR R2, R6, #0 ; GT
ADD R6, R6, #1 ; IF
LDR R1, R6, #0 ; IF
BRnz ELSE_BRANCH_4 ; IF
ADD R6 R6 #-1 ; LITERAL
CONST R0 #3 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
JMP ENDIF_BRANCH_4 ; ELSE
ELSE_BRANCH_4 ; ELSE
ADD R6 R6 #-1 ; LITERAL
CONST R0 #4 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
ENDIF_BRANCH_4 ; ENDIF
JMP ENDIF_BRANCH_3 ; ELSE
ELSE_BRANCH_3 ; ELSE
LDR R0, R6, #0 ; DUP
ADD R6, R6, #-1 ; DUP
STR R0, R6, #0 ; DUP
ADD R6 R6 #-1 ; LITERAL
CONST R0 #32 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
LDR R0, R6, #0 ; GT
LDR R1, R6, #1 ; GT
CMP R0, R1; GT
BRp TRUE_L_5 ; GT
BRnz FALSE_L_5 ; GT
TRUE_L_5 ; GT
CONST R2, #1 ; GT
BRnzp TERMINATE_L_5 ; GT
FALSE_L_5 ; GT
CONST R2, #0 ; GT
BRnzp TERMINATE_L_5 ; GT
TERMINATE_L_5 ; GT
ADD R6, R6, #1; GT
STR R2, R6, #0 ; GT
ADD R6, R6, #1 ; IF
LDR R1, R6, #0 ; IF
BRnz ELSE_BRANCH_5 ; IF
ADD R6 R6 #-1 ; LITERAL
CONST R0 #5 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
JMP ENDIF_BRANCH_5 ; ELSE
ELSE_BRANCH_5 ; ELSE
ADD R6 R6 #-1 ; LITERAL
CONST R0 #246 ; LITERAL
HICONST R0 #255 ; LITERAL
STR R0 R6 #0 ; LITERAL
ENDIF_BRANCH_5 ; ENDIF
ENDIF_BRANCH_3 ; ENDIF
ENDIF_BRANCH_0 ; ENDIF
LDR R7, R6, #0 ; RETURN
STR R7, R5, #2 ; RETURN
ADD R6, R5, #0 ; RETURN
LDR R5, R6, #0 ; RETURN
LDR R7, R6, #1 ; RETURN
ADD R6, R6, #3 ; RETURN
RET ; RETURN
.CODE ; DEFUN/IDENT
.FALIGN ; DEFUN/IDENT
main ; DEFUN/IDENT
ADD R6, R6, #-3 ; DEFUN/IDENT
STR R7, R6, #1 ; DEFUN/IDENT
STR R5, R6, #0 ; DEFUN/IDENT
ADD R5, R6, #0 ; DEFUN/IDENT
ADD R6 R6 #-1 ; LITERAL
CONST R0 #5 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
JSR testIfs ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR printnum ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR endl ; IDENT
ADD R6, R6, #-1 ; IDENT
ADD R6 R6 #-1 ; LITERAL
CONST R0 #11 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
JSR testIfs ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR printnum ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR endl ; IDENT
ADD R6, R6, #-1 ; IDENT
ADD R6 R6 #-1 ; LITERAL
CONST R0 #28 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
JSR testIfs ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR printnum ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR endl ; IDENT
ADD R6, R6, #-1 ; IDENT
ADD R6 R6 #-1 ; LITERAL
CONST R0 #35 ; LITERAL
HICONST R0 #0 ; LITERAL
STR R0 R6 #0 ; LITERAL
JSR testIfs ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR printnum ; IDENT
ADD R6, R6, #-1 ; IDENT
JSR endl ; IDENT
ADD R6, R6, #-1 ; IDENT
LDR R7, R6, #0 ; RETURN
STR R7, R5, #2 ; RETURN
ADD R6, R5, #0 ; RETURN
LDR R5, R6, #0 ; RETURN
LDR R7, R6, #1 ; RETURN
ADD R6, R6, #3 ; RETURN
RET ; RETURN
